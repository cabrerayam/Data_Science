# -*- coding: utf-8 -*-
"""Intro analisis de datos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qbn-OV4B-qf34kRHN0K2Hy766r8q4kVJ

##Operaciones generales con columnas
### Como eliminar columnas
"""

#importo la libreria pandas
import pandas as pd
#pd.read_excel leer archivos de excel
#importo el dataset en excel
d_refugiados = pd.read_excel('/content/drive/MyDrive/Coder Data Analytics/Primera Entrega Proyecto Final/Tablas Dataset 2015- 2020 UNHCR.xlsx')
d_refugiados

from xlrd.formula import dump_formula
#eliminar columnas de nuestro DataFrame
d_refugiados_2 = d_refugiados.drop(columns= 'Application type') # elimina la columna application type y guarda los cambios en un dataframe nuevo
d_refugiados_2

#.drop
#eliminar 2 o mas columnas
d_refugiados_2.drop(columns=['Authority', 'Stage of procedure', 'Cases / Persons'])

"""# Como eliminamos los duplicados"""

#.drop_duplicates()
d_refugiados_3 = d_refugiados[['Year', 'Country of origin']]
d_refugiados_4 = d_refugiados_3.drop_duplicates()
d_refugiados_4

# .shape  : revisamos cuantos registros tenemos para ver si se eliminaron los duplicados
d_refugiados_4.shape

# .duplicated(): con este metodo tenemos podemos probar si tiene registros duplicados
d_refugiados_3.duplicated()

#nos muestra cuales son los registros duplicados
d_refugiados_3[d_refugiados_3.duplicated()]

# obtenemos la cantidad de registros duplicados
d_refugiados_3[d_refugiados_3.duplicated()].shape

"""# Como ordenar un DataFrame"""

#.sort_values : ordena de forma ascendente (cuando tiene nulos los ordena al final de todo)

d_refugiados.sort_values('Year')

# para ordenar de forma descendente
d_refugiados.sort_values('Year', ascending = False)
d_refugiados

# Ordenar por dos columnas: recomienda usar DataTable para visualizar mejor

from google.colab.data_table import DataTable
DataTable(d_refugiados.sort_values(['Year','Country of origin']))

# Emprolijar para chequear que esta ok 
d_refugiados_ord = d_refugiados.sort_values(['Year', 'Country of origin'])

d_refugiados_ord = d_refugiados_ord[['Year', 'Country of origin']]
DataTable(d_refugiados_ord)

"""## Como crear un variable en un DataFrame"""

d_refugiados_ord['nueva variable'] = 999
d_refugiados_ord

# crear una variable nueva que almacene una resultado, en este caso dividir las aplicaciones / 100
d_refugiados['applied entre 100'] = d_refugiados['applied'] / 100
d_refugiados

"""## Como ordenar variables en un Pandas DataFrame"""

#Debemos crear un subset y luego ordenarlo
d_refugiados_5 = d_refugiados.iloc[:, 0:3]
d_refugiados_5.columns

#reordenando
d_refugiados_reord = d_refugiados_5[['Country of origin (ISO)', 'Country of origin', 'Year']]
d_refugiados_reord

"""## Como reemplazar nombre de columnas (renombrar variables)"""

#.rename()
d_refugiados_reord.head() # para ver los nombre de las variables

d_refugiados_reord.rename(columns = {'Country of origin': 'Pais de origen', 'Country of origin (ISO)': 'ISO', 'Year': 'AÃ±o'}).head()

#Aplicar una funcion a todas nuestras columnas: LLEVAR TODOS LOS HEADS A MAYUSCULAS o MINUSCULAS
str.upper('hola')
# para llevar a minusculas: str.lower('HOLA')

d_refugiados_lower = d_refugiados_reord.rename(str.lower, axis = 'columns').head()

# Eliminar los espacios de los nombres de las columnas (columnas = variables)
#.replace
'hola mundo'.replace(' ', '_')

d_refugiados_lower.columns =d_refugiados_lower.columns.str.replace(' ', '_')
d_refugiados_lower.head()

"""## Usar la funcion Query para filtrar datos en un DataFrame"""

#query()
d_refugiados_lower.query('year == 2006')

#AND
d_refugiados_lower.query("year == 2006 and country_of_origin == 'Albania'")

#OR, tambien sirve para filtrar extremos filtrar extremos

d_refugiados_lower.query("year==2006 and country_of_origin == 'Albania' or country_of_origin =='Egypt'")

d_refugiados_lower.query("year > 2006 or year < 2006")

"""## Como hacer una descripcion estadistica basica de los datos
Cargar los datos, reemplazar los nulos, importar funpymodeling 
"""

# Commented out IPython magic to ensure Python compatibility.
# ## Instalacion de la libreria funpymodeling (usamos el capture para que no aparezca el mensaje largo en la pantalla)
# %%capture   
# !pip install funpymodeling

from funpymodeling.exploratory import status, freq_tbl, profiling_num

#Analisis univariado de variables numerica
# mean = promedio, std_dev = desvio standar, variation_coef = coeficiente de variacion, p_0.01 = percentiles

profiling_num(d_refugiados)

#Analisis univariado de variables categorica
#frequency = frecuencia, percentage = %, cumulative_perc = % acumulado

freq_tbl(d_refugiados)

#Ademas de un dataframe podemos pasarle una sola variable
profiling_num(d_refugiados['Year'])

#.describe()
d_refugiados.describe()

"""## Como aplicar funciones de sumarizacion a cada columna"""

#Tiene sentido solo para variables numericas
d_refugiados.max()  # muestra el maximo valor

d_refugiados.min()  # muestra el minimo valor

d_refugiados.mean() #muestra el promedio

"""## Uso del print"""

print('Hola mundo')

print('El promedio de aplicaciones es: %s y el de aÃ±os es: %s' % (d_refugiados['applied'].mean(), d_refugiados['Year'].mean()))  #tupla para que salgan dos valores

#investigar como se hace para redondear a dos decimales

"""##Pandas Profiling"""

# Commented out IPython magic to ensure Python compatibility.
# ## Investigar esto porque me da error
# 
# %%capture
# !pip install pandas-profiling==2.7.1

from pandas_profiling import ProfileReport

ProfileReport(d_refugiados)

"""## Como exportar archivos y cambiar el directorio de trabajo"""

#Como exportar un pandas dataframe a csv?
d_refugiados_reord.head()

d_refugiados_reord.to_csv('d_refugiados_reordenados.csv', sep= ',', index= False) # (nombre del arhivo.extension, separador, index = false para que no guarde los numeros de las columnas)

#para ver la carpeta en donde estamos parados:
import os
os.getcwd()

# indicamos el directorio de trabajo donde lo tenemos que guardar y despues ejecutamos la linea
os.chdir('path del directorio de trabajo')
d_refugiados_reord.to_csv('d_refugiados_reordenados.csv', sep= ',', index= False)